[{"/home/john/Documents/GitHub/taskbox/src/index.js":"1","/home/john/Documents/GitHub/taskbox/src/App.js":"2","/home/john/Documents/GitHub/taskbox/src/reportWebVitals.js":"3","/home/john/Documents/GitHub/taskbox/src/components/Task.stories.js":"4","/home/john/Documents/GitHub/taskbox/src/components/Task.js":"5","/home/john/Documents/GitHub/taskbox/src/components/TaskList.stories.js":"6","/home/john/Documents/GitHub/taskbox/src/components/TaskList.js":"7"},{"size":500,"mtime":1611849681452,"results":"8","hashOfConfig":"9"},{"size":192,"mtime":1611854549644,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611849681452,"results":"11","hashOfConfig":"9"},{"size":605,"mtime":1611949964102,"results":"12","hashOfConfig":"13"},{"size":1375,"mtime":1611950904043,"results":"14","hashOfConfig":"13"},{"size":1301,"mtime":1611955928357,"results":"15","hashOfConfig":"13"},{"size":501,"mtime":1611952821855,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13es626",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"okmh3h",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/john/Documents/GitHub/taskbox/src/index.js",[],"/home/john/Documents/GitHub/taskbox/src/App.js",[],"/home/john/Documents/GitHub/taskbox/src/reportWebVitals.js",[],"/home/john/Documents/GitHub/taskbox/src/components/Task.stories.js",["35"],"import React from \"react\";\n\nimport Task from \"./Task\";\n\nexport default {\n  component: Task,\n  title: \"Task\",\n};\n\nconst Template = (args) => <Task {...args} />;\n\nexport const Default = Template.bind({});\nDefault.args = {\n  task: {\n    id: \"1\",\n    title: \"Test Task\",\n    state: \"TASK_INBOX\",\n    updatedAt: new Date(2018, 0, 1, 9, 0),\n  },\n};\n\nexport const Pinned = Template.bind({});\nPinned.args = {\n  task: {\n    ...Default.args.task,\n    state: \"TASK_PINNED\",\n  },\n};\n\nexport const Archived = Template.bind({});\nArchived.args = {\n  task: {\n    ...Default.args.task,\n    state: \"TASK_ARCHIVED\",\n  },\n};\n",["36","37"],"/home/john/Documents/GitHub/taskbox/src/components/Task.js",["38"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Task({\n  task: { id, title, state },\n  onArchiveTask,\n  onPinTask,\n}) {\n  return (\n    <div className={`list-item ${state}`}>\n      <label>\n        <input\n          type=\"checkbox\"\n          defaultChecked={state === \"TASK_ARCHIVED\"}\n          disabled={true}\n          name=\"checked\"\n        />\n        <span className=\"checkbox-custom\" onClick={() => onArchiveTask(id)} />\n      </label>\n\n      <div className=\"title\">\n        <input\n          type=\"text\"\n          value={title}\n          readOnly={true}\n          placeholder=\"input title\"\n        />\n      </div>\n\n      <div className=\"actions\" onClick={(event) => event.stopPropagation()}>\n        {state !== \"TASK_ARCHIVED\" && (\n          <a onClick={() => onPinTask(id)}>\n            <span className={`icon-star`}> </span>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n}\n\nTask.propTypes = {\n  /** Composition of the task */\n  task: PropTypes.shape({\n    /** Id of the task */\n    id: PropTypes.string.isRequired,\n    /** Title of the task */\n    title: PropTypes.string.isRequired,\n    /** Current state of the task */\n    state: PropTypes.string.isRequired,\n  }),\n  /** Event to change the task to archived */\n  onArchiveTask: PropTypes.func,\n  /** Event to change the task to pinned */\n  onPinTask: PropTypes.func,\n};\n","/home/john/Documents/GitHub/taskbox/src/components/TaskList.stories.js",["39"],"/home/john/Documents/GitHub/taskbox/src/components/TaskList.js",[],["40","41"],{"ruleId":"42","severity":1,"message":"43","line":5,"column":1,"nodeType":"44","endLine":8,"endColumn":3},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":32,"column":11,"nodeType":"51","endLine":32,"endColumn":44},{"ruleId":"42","severity":1,"message":"43","line":6,"column":1,"nodeType":"44","endLine":10,"endColumn":3},{"ruleId":"45","replacedBy":"52"},{"ruleId":"47","replacedBy":"53"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["54"],["55"],"no-global-assign","no-unsafe-negation"]